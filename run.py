from neuron import h,gui

def run_and_record(icc,v,ina,t,ik,ica,icl,eca,ins,cai,cao,ek,capui,caeri,cami,cli,clo,oano,ecl,ena,ica_vddr,icl_ano1, icl_cacl, ina_Na, ik_kv11, ik_bk, ica_ltype, i_nscc, ik_Kb, ica_pmca, ik_ERG):



	v.record(icc(0.5)._ref_v)
	t.record(h._ref_t)
	ina.record(icc(.5)._ref_ina)
	ik.record(icc(.5)._ref_ik)
	icl.record(icc(.5)._ref_icl)
	ica.record(icc(.5)._ref_ica)
	ins.record(icc(.5)._ref_i_nscc)
	eca.record(icc(.5)._ref_eca)
	cai.record(icc(.5)._ref_cai)
	cao.record(icc(.5)._ref_cao)
	ek.record(icc(.5)._ref_ek)
	capui.record(icc(.5)._ref_capui)
	caeri.record(icc(.5)._ref_caeri)
	cami.record(icc(.5)._ref_cami)
	cli.record(icc(.5)._ref_cli)
	clo.record(icc(.5)._ref_clo)
	oano.record(icc(.5)._ref_O_Ano1_ano1)
	ecl.record(icc(.5)._ref_ecl)
	ena.record(icc(.5)._ref_ena)
	
	ica_vddr.record(icc(.5)._ref_ica_vddr)
	icl_ano1.record(icc(.5)._ref_icl_ano1)
	icl_cacl.record(icc(.5)._ref_icl_cacl)
	ina_Na.record(icc(.5)._ref_ina_Na)
	ik_kv11.record(icc(.5)._ref_ik_kv11)
	ik_bk.record(icc(.5)._ref_ik_bk)
	ica_ltype.record(icc(.5)._ref_ica_ltype)
	i_nscc.record(icc(.5)._ref_i_nscc)
	ik_Kb.record(icc(.5)._ref_ik_Kb)
	ica_pmca.record(icc(.5)._ref_ica_pmca)
	ik_ERG.record(icc(.5)._ref_ik_ERG)


	h.run()

	# v = v.to_python()
	# ina = ina.to_python()
	# t = t.to_python()
	# ik = ik.to_python()
	# ica= ica.to_python()
	# icl =icl.to_python() 
	# eca = eca.to_python()
	# ins = ins.to_python()
	# cai = cai.to_python()
	# cao = cao.to_python()
	# ek = ek.to_python()
	# capui = capui.to_python()
	# caeri = caeri.to_python()
	# cami = cami.to_python()
	# cli = cli.to_python()
	# clo = clo.to_python()
	# oano = oano.to_python()
	# ecl = ecl.to_python()
	# ena = ena.to_python()
	# ica_vddr = ica_vddr.to_python()
	# icl_ano1 = icl_ano1.to_python()
	# icl_cacl= icl_cacl.to_python()
	# ina_Na = ina_Na.to_python() 
	# ik_kv11= ik_kv11.to_python() 
	# ik_bk= ik_bk.to_python()
	# ica_ltype= ica_ltype.to_python()
	# i_nscc= i_nscc.to_python() 
	# ik_Kb= ik_Kb.to_python() 
	# ica_pmca= ica_pmca.to_python() 
	# ik_ERG= ik_ERG.to_python()


	# return v,ina,t,ik,ica,icl,eca,ins,cai,cao,ek,capui,caeri,cami,cli,clo,oano,ecl,ena,ica_vddr,icl_ano1, icl_cacl, ina_Na, ik_kv11, ik_bk, ica_ltype, i_nscc, ik_Kb, ica_pmca, ik_ERG